name: Refresh repos.list

on:
  schedule:
    - cron: '0 14 * * *'
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    env:
      # Hard-coded input per agreed minimal design
      PATTERN: "^disafronov/(.*)-template_update"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify template.repo
        shell: sh
        run: |
          if [ ! -s template.repo ]; then
            echo "template.repo not found or empty" >&2
            exit 1
          fi
          if [ "$(wc -l < template.repo)" -ne 1 ]; then
            echo "template.repo must contain exactly one line" >&2
            exit 1
          fi

      - name: Build repos.list (own, non-fork, non-archived, incl. private)
        env:
          # Use PAT only for listing repositories (private access)
          GH_TOKEN: ${{ secrets.REPO_UPDATE_TOKEN }}
        shell: sh
        run: |
          set -eu

          tmp="$(mktemp)"; : > "$tmp"

          # Collect repositories of the authenticated user (owner: private and public)
          gh api -H "Accept: application/vnd.github+json" \
            "/user/repos?affiliation=owner&visibility=all&per_page=100" --paginate \
            --jq '.[] | select(.fork==false and .archived==false) | .full_name' \
            >> "$tmp"

          # Filter by pattern, apply exclusions, sort unique
          grep -E "${PATTERN}" "$tmp" \
            | grep -F -x -v \
                -e "$(cat template.repo)" \
                -e "${{ github.repository }}" \
            | sort -u > repos.list

          # Fail if repos.list is empty (after excluding template and self repo)
          if [ "$(wc -l < repos.list)" -eq 0 ]; then
            echo "repos.list is empty (no repos matched [${PATTERN}] after excluding [$(cat template.repo)] and [${{ github.repository }}])" >&2
            exit 1
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: refresh-repos-list
          base: main
          commit-message: "chore(repos): refresh repos.list"
          title: "chore(repos): refresh repos.list"
          body: Automated refresh of repos.list
          add-paths: |
            repos.list
          signoff: true
          delete-branch: true
